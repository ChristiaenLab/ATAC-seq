points(Foxf_LacZ[asm,"log2FoldChange"],-log10(Foxf_LacZ[asm,"padj"]),pch=19,col='blue')
points(Foxf_LacZ[tvcp,"log2FoldChange"],-log10(Foxf_LacZ[tvcp,"padj"]),pch=19,col='forestgreen')
plot(Foxf_LacZ$log2FoldChange,-log10(Foxf_LacZ$padj),col='gray',pch=19,xlim=c(-4,4))
points(Foxf_LacZ[heart,"log2FoldChange"],-log10(Foxf_LacZ[heart,"padj"]),pch=19,col='red')
points(Foxf_LacZ[asm,"log2FoldChange"],-log10(Foxf_LacZ[asm,"padj"]),pch=19,col='blue')
points(Foxf_LacZ[tvcp,"log2FoldChange"],-log10(Foxf_LacZ[tvcp,"padj"]),pch=19,col='forestgreen')
getGeneNames(con)
gene.names <- getGeneNames(con)
gene.names[tvcp]
gene.names[tvcp,]
gene.names[asm,]
gene.names[heart,]
dir.eps('FoxF_LacZ_volcano')
plot(Foxf_LacZ$log2FoldChange,-log10(Foxf_LacZ$padj),col='gray',pch=19,xlim=c(-4,4))
points(Foxf_LacZ[heart,"log2FoldChange"],-log10(Foxf_LacZ[heart,"padj"]),pch=19,col='red')
points(Foxf_LacZ[asm,"log2FoldChange"],-log10(Foxf_LacZ[asm,"padj"]),pch=19,col='blue')
points(Foxf_LacZ[tvcp,"log2FoldChange"],-log10(Foxf_LacZ[tvcp,"padj"]),pch=19,col='forestgreen')
dev.off()
dir.eps('FoxF_LacZ_volcano')
plot(Foxf_LacZ$log2FoldChange,-log10(Foxf_LacZ$padj),col='gray',pch=19,xlim=c(-4,4),cex=1.5)
points(Foxf_LacZ[heart,"log2FoldChange"],-log10(Foxf_LacZ[heart,"padj"]),pch=19,col='red',cex=1.5)
points(Foxf_LacZ[asm,"log2FoldChange"],-log10(Foxf_LacZ[asm,"padj"]),pch=19,col='blue',cex=1.5)
points(Foxf_LacZ[tvcp,"log2FoldChange"],-log10(Foxf_LacZ[tvcp,"padj"]),pch=19,col='forestgreen',cex=1.5)
dev.off()
expDesign <- data.frame(
condition=c(rep('FoxF10hpf',2),rep("LacZ10hpf",2),rep("Ngn10hpf",2)),
date=sub('.*rnaseq_','',names(dat)),
row.names = names(dat)
)
filt <- dat[-grep('_',row.names(dat)),]
comp <- matrix(c('FoxF10hpf',"LacZ10hpf","FoxF10hpf","Ngn10hpf"),2)
design <- model.matrix(~ 0+condition+date,expDesign)
dge <- DGEList(filt,group=expDesign$condition,samples = expDesign)
dge <- calcNormFactors(dge)
dge <- estimateDisp(dge,design)
?apply
?exactTest
res <- apply(comp,2,function(x) exactTest(dge,x)$table)
res
res[[1]]
head(res[[1]])
res <- apply(comp,2,function(x) setNames(
exactTest(dge,x)$table,
c('log2FoldChange','logCPM','p.value')
)
Foxf_LacZ <- exactTest(dge,c("LacZ","FoxF"))$table
names(Foxf_LacZ) <- c('log2FoldChange','logCPM','p.value')
Foxf_LacZ$padj <- p.adjust(Foxf_LacZ$p.value)
sel <- abs(Foxf_LacZ$log2FoldChange)>.75&Foxf_LacZ$padj<.05
heart <- intersect(row.names(Foxf_LacZ)[sel],scrna$Cardiac)
asm <- intersect(row.names(Foxf_LacZ)[sel],scrna$ASM)
tvcp <- intersect(row.names(Foxf_LacZ)[sel],scrna$TVCP)
# Fig. S9B
gene.names[heart,]
gene.names[asm,]
gene.names[tvc,]
dir.eps('FoxF_LacZ_volcano')
plot(Foxf_LacZ$log2FoldChange,-log10(Foxf_LacZ$padj),col='gray',pch=19,xlim=c(-4,4),cex=1.5)
points(Foxf_LacZ[heart,"log2FoldChange"],-log10(Foxf_LacZ[heart,"padj"]),pch=19,col='red',cex=1.5)
points(Foxf_LacZ[asm,"log2FoldChange"],-log10(Foxf_LacZ[asm,"padj"]),pch=19,col='blue',cex=1.5)
points(Foxf_LacZ[tvcp,"log2FoldChange"],-log10(Foxf_LacZ[tvcp,"padj"]),pch=19,col='forestgreen',cex=1.5)
dev.off()
library(DESeq2)
dds <- DESeqDataSetFromMatrix(
countData=filt,
colData = expDesign,
design = ~ condition + date)
dds <- DESeq(dds)
res <- apply(comp,2,function(x) setNames(
exactTest(dge,x)$table,
c('log2FoldChange','logCPM','p.value')
))
res[[1]]
apply(comp,2,paste0,collapse='_')
names(res) <- apply(comp,2,paste0,collapse='_')
reverse(comp[,1])
?reverse
reverse(as.factor(comp[,1]))
reverse(expDesign$condition)
melt.rename
melt.rename(res,'comparison')
foxf <- lrtab('dat/rnaseq/foxf/',read.csv,'\\.csv',stringsAsFactors=F)
res <- lapply(res,function(x) cbind(GeneID=row.names(x),x,padj=p.adjust(x$p.value)))
res
res$FoxF10hpf_LacZ10hpf
Foxf_LacZ <- res$FoxF10hpf_LacZ10hpf
names(Foxf_LacZ) <- c("GeneID",'log2FoldChange','logCPM','p.value')
Foxf_LacZ$padj <- p.adjust(Foxf_LacZ$p.value)
res <- apply(comp,2,function(x) setNames(
exactTest(dge,x)$table,
c('log2FoldChange','logCPM','p.value')
))
res <- lapply(res,function(x) cbind(GeneID=row.names(x),x,padj=p.adjust(x$p.value)))
names(res) <- apply(comp,2,paste0,collapse='_')
Foxf_LacZ <- res$FoxF10hpf_LacZ10hpf
res$FoxF10hpf_LacZ10hpf
Foxf_LacZ <- res$FoxF10hpf_LacZ10hpf
sel <- abs(Foxf_LacZ$log2FoldChange)>.75&Foxf_LacZ$padj<.05
heart <- intersect(row.names(Foxf_LacZ)[sel],scrna$Cardiac)
asm <- intersect(row.names(Foxf_LacZ)[sel],scrna$ASM)
tvcp <- intersect(row.names(Foxf_LacZ)[sel],scrna$TVCP)
gene.names[heart,]
gene.names[asm,]
gene.names[tvc,]
dir.eps('FoxF_LacZ_volcano')
plot(Foxf_LacZ$log2FoldChange,-log10(Foxf_LacZ$padj),col='gray',pch=19,xlim=c(-4,4),cex=1.5)
points(Foxf_LacZ[heart,"log2FoldChange"],-log10(Foxf_LacZ[heart,"padj"]),pch=19,col='red',cex=1.5)
points(Foxf_LacZ[asm,"log2FoldChange"],-log10(Foxf_LacZ[asm,"padj"]),pch=19,col='blue',cex=1.5)
points(Foxf_LacZ[tvcp,"log2FoldChange"],-log10(Foxf_LacZ[tvcp,"padj"]),pch=19,col='forestgreen',cex=1.5)
dev.off()
dir.eps('FoxF_LacZ_volcano')
plot(
Foxf_LacZ$log2FoldChange[Foxf_LacZ$p.value<.05],
-log10(Foxf_LacZ$padj[Foxf_LacZ$p.value<.05]),
col='gray',pch=19,xlim=c(-4,4),cex=1.5
)
points(Foxf_LacZ[heart,"log2FoldChange"],-log10(Foxf_LacZ[heart,"padj"]),pch=19,col='red',cex=1.5)
points(Foxf_LacZ[asm,"log2FoldChange"],-log10(Foxf_LacZ[asm,"padj"]),pch=19,col='blue',cex=1.5)
points(Foxf_LacZ[tvcp,"log2FoldChange"],-log10(Foxf_LacZ[tvcp,"padj"]),pch=19,col='forestgreen',cex=1.5)
dev.off()
dir.eps('FoxF_LacZ_volcano')
plot(
Foxf_LacZ$log2FoldChange[Foxf_LacZ$p.value<.05],
-log10(Foxf_LacZ$padj[Foxf_LacZ$p.value<.05]),
col='gray',pch=19,cex=1.5
)
points(Foxf_LacZ[heart,"log2FoldChange"],-log10(Foxf_LacZ[heart,"padj"]),pch=19,col='red',cex=1.5)
points(Foxf_LacZ[asm,"log2FoldChange"],-log10(Foxf_LacZ[asm,"padj"]),pch=19,col='blue',cex=1.5)
points(Foxf_LacZ[tvcp,"log2FoldChange"],-log10(Foxf_LacZ[tvcp,"padj"]),pch=19,col='forestgreen',cex=1.5)
dev.off()
dir.eps('FoxF_LacZ_volcano')
plot(
Foxf_LacZ$log2FoldChange[Foxf_LacZ$p.value<.05],
-log10(Foxf_LacZ$padj[Foxf_LacZ$p.value<.05]),
col='gray',pch=19,xlim=c(-4,4),cex=1.5
)
points(Foxf_LacZ[heart,"log2FoldChange"],-log10(Foxf_LacZ[heart,"padj"]),pch=19,col='red',cex=1.5)
points(Foxf_LacZ[asm,"log2FoldChange"],-log10(Foxf_LacZ[asm,"padj"]),pch=19,col='blue',cex=1.5)
points(Foxf_LacZ[tvcp,"log2FoldChange"],-log10(Foxf_LacZ[tvcp,"padj"]),pch=19,col='forestgreen',cex=1.5)
dev.off()
melt.rename(res,'comparison')
con
dbWriteGenes
dbWriteKey
tail(melt.rename(res,'comparison'))
dir.eps('FoxF_LacZ_volcano')
plot(
Foxf_LacZ$log2FoldChange[Foxf_LacZ$p.value<.10],
-log10(Foxf_LacZ$padj[Foxf_LacZ$p.value<.10]),
col='gray',pch=19,xlim=c(-4,4),cex=1.5
)
points(Foxf_LacZ[heart,"log2FoldChange"],-log10(Foxf_LacZ[heart,"padj"]),pch=19,col='red',cex=1.5)
points(Foxf_LacZ[asm,"log2FoldChange"],-log10(Foxf_LacZ[asm,"padj"]),pch=19,col='blue',cex=1.5)
points(Foxf_LacZ[tvcp,"log2FoldChange"],-log10(Foxf_LacZ[tvcp,"padj"]),pch=19,col='forestgreen',cex=1.5)
dev.off()
hist(width(peakGeneAnnotation$peaks),1000,xlim=c(0,1000),border = 'gray',col='gray',ylim=c(0,8000))
scrna <- getScRNA(con)
bulkGS <- getBulkRNA(con)
peakGeneAnnotation <- getAnnotation(con)
peaksets <- getPeaksets(con)
peakome <- peakGeneAnnotation$peaks
DEgenes <- intersect(union(unlist(scrna[-11]),unlist(bulkGS)),names(peakGeneAnnotation$geneToPeak))
de.daAnn <- mergeGenePeak(con,DEgenes,Reduce(union,peaksets))
de.daAnn <- list(
geneToPeak=split(de.daAnn$PeakID,de.daAnn$GeneID),
peakToGene=split(de.daAnn$GeneID,de.daAnn$PeakID)
)
peakGC <- letterFrequency(Views(BSgenome.Cintestinalis.KH.KH2013,peakGeneAnnotation$peaks),"GC")
featGC <- apply(peakGeneAnnotation$features[,-1:-3],2,function(x) sum(peakGC[x])/sum(width(peakGeneAnnotation$peaks[x])))
genomeFeatGC <- sapply(genomefeat,function(x) sum(
letterFrequency(Views(BSgenome.Cintestinalis.KH.KH2013,x),"GC")
)/sum(width(x)))
peakGeneAnnotation$genes
peakGeneAnnotation$gene.names
kh2013 <- getFeatures('KH.KHGene.2013.gff3',genedat$gene_name)
source('data/dirfns.R')
source("data/GRfns.R")
source("data/DESeqFns.R")
source('data/sqlfns.R')
kh2013 <- getFeatures('KH.KHGene.2013.gff3',genedat$gene_name)
peakGeneAnnotation$gene.names
kh2013 <- getFeatures('KH.KHGene.2013.gff3',peakGeneAnnotation$gene.names)
tsc <- read.csv('dat/peaks/tsc.csv')
tsc$GeneID <- paste0("KH2013:",tsc$GeneID)
tsc <- GRanges(
Rle(tsc$Chr),
IRanges(tsc$Start,tsc$End),
Rle(tsc$Strand),
GeneID=tsc$GeneID,
Rep.TSS=tsc$Rep.TSS,
feature=tsc$Location
)
peakGC <- letterFrequency(Views(BSgenome.Cintestinalis.KH.KH2013,peakGeneAnnotation$peaks),"GC")
featGC <- apply(peakGeneAnnotation$features[,-1:-3],2,function(x) sum(peakGC[x])/sum(width(peakGeneAnnotation$peaks[x])))
genomeFeatGC <- sapply(genomefeat,function(x) sum(
letterFrequency(Views(BSgenome.Cintestinalis.KH.KH2013,x),"GC")
)/sum(width(x)))
genomefeat <- append(
kh2013$features,
list(TSC=tsc,genome=GRanges(seqinfo(BSgenome.Cintestinalis.KH.KH2013)))
)
genomefeat <- do.call(GRangesList,lapply(genomefeat,function(x) reduce(unlist(x))))
genomefeat <- sapply(genomefeat,trim)
peakome <- import('peaks.subtracted.bed')
peakome <- peakome[width(peakome)>50]
promoterAnn <- findOverlaps(peakome,kh2013$promoterGene)
peakGeneAnnotation <- annotatePeaks(peakome,kh2013$genebody,features = genomefeat)
peakGeneAnnotation$promoterAnn <- promoterAnn
peakGeneAnnotation$peaks
peakGC <- letterFrequency(Views(BSgenome.Cintestinalis.KH.KH2013,peakGeneAnnotation$peaks),"GC")
featGC <- apply(peakGeneAnnotation$features[,-1:-3],2,function(x) sum(peakGC[x])/sum(width(peakGeneAnnotation$peaks[x])))
genomeFeatGC <- sapply(genomefeat,function(x) sum(
letterFrequency(Views(BSgenome.Cintestinalis.KH.KH2013,x),"GC")
)/sum(width(x)))
dir.eps('GCfeat')
barplot(rbind(featGC,genomeFeatGC),las=2,beside = T)
dev.off()
windowSize <- sum(width(reduce(peakGeneAnnotation$genewindow)))
peakGeneAnnotation <- getAnnotation(con)
windowSize <- sum(width(reduce(peakGeneAnnotation$genewindow)))
tfSize <- sum(width(reduce(peakGeneAnnotation$genewindow[tfs])))
tfs <- dbReadTable(con,'TFs_from_GHOST',row.names="GeneID")
csm <- dbReadTable(con,'signaling_molecules_from_GHOST',row.names="GeneID")
tfSize <- sum(width(reduce(peakGeneAnnotation$genewindow[tfs])))
tfs
tfs <- dbReadTable(con,'TFs_from_GHOST')$GeneID
csm <- dbReadTable(con,'signaling_molecules_from_GHOST')$GeneID
tf.csmBinom <- geneSizeBinom(
list(TF=tfs,CSM=csm),peakGeneAnnotation,peakGeneAnnotation$genewindow
)
DEtf.csmBinom <- geneSizeBinom(
list(TF=tfs,CSM=csm),peakGeneAnnotation,peakGeneAnnotation$genewindow[DEgenes]
)
tf.csmBinom
barplot(
t(DEtf.csmBinom[,c('null.value','estimate')])*100,
beside = T,
# names.arg = c(
#   'Promoter 1kb',"Promoter 0.5kb","TSS","5' UTR","CDS","Intron","3' UTR","TTS","Intergenic"
# ),
las=2,legend.text = c(
'% DE gene coverage','% peaks overlapping DE genes'
),args.legend = list(x='topright'),
ylim=c(0,max(DEtf.csmBinom[,"upperConf"])*100)
)
segments(
seq(2.5,by=3,length.out = nrow(DEtf.csmBinom)),DEtf.csmBinom[,"lowerConf"]*100,
seq(2.5,by=3,length.out = nrow(DEtf.csmBinom)),DEtf.csmBinom[,"upperConf"]*100
)
windowSize <- sum(width(reduce(peakGeneAnnotation$genewindow)))
tfSize <- sum(width(reduce(peakGeneAnnotation$genewindow[tfs])))
csmSize <- sum(width(reduce(peakGeneAnnotation$genewindow[csm])))
peakGeneAnnotation$genewindow
peakGeneAnnotation$genewindow[tfs]
tfs
peakGeneAnnotation$genewindow[tfs]
names(peakGeneAnnotation$genewindow)
tfs%in%names(peakGeneAnnotation$genewindow)
setdiff(tfs,names(peakGeneAnnotation$genewindow))
intersect(dbReadTable(con,'TFs_from_GHOST')$GeneID,row.names(peakGeneAnnotation$gene.names))
tfs <- intersect(
dbReadTable(con,'TFs_from_GHOST')$GeneID,
row.names(peakGeneAnnotation$gene.names)
)
csm <- intersect(
dbReadTable(con,'signaling_molecules_from_GHOST')$GeneID,
row.names(peakGeneAnnotation$gene.names)
)
tf.csmBinom <- geneSizeBinom(
list(TF=tfs,CSM=csm),peakGeneAnnotation,peakGeneAnnotation$genewindow
)
DEtf.csmBinom <- geneSizeBinom(
list(TF=tfs,CSM=csm),peakGeneAnnotation,peakGeneAnnotation$genewindow[DEgenes]
)
barplot(
t(DEtf.csmBinom[,c('null.value','estimate')])*100,
beside = T,
# names.arg = c(
#   'Promoter 1kb',"Promoter 0.5kb","TSS","5' UTR","CDS","Intron","3' UTR","TTS","Intergenic"
# ),
las=2,legend.text = c(
'% DE gene coverage','% peaks overlapping DE genes'
),args.legend = list(x='topright'),
ylim=c(0,max(DEtf.csmBinom[,"upperConf"])*100)
)
segments(
seq(2.5,by=3,length.out = nrow(DEtf.csmBinom)),DEtf.csmBinom[,"lowerConf"]*100,
seq(2.5,by=3,length.out = nrow(DEtf.csmBinom)),DEtf.csmBinom[,"upperConf"]*100
)
windowSize <- sum(width(reduce(peakGeneAnnotation$genewindow)))
tfSize <- sum(width(reduce(peakGeneAnnotation$genewindow[tfs])))
csmSize <- sum(width(reduce(peakGeneAnnotation$genewindow[csm])))
DEtfs <- intersect(tfs,DEgenes)
DEcsm <- intersect(csm,DEgenes)
DEwindowSize <- sum(width(reduce(peakGeneAnnotation$genewindow[DEgenes])))
DEtfSize <- sum(width(reduce(peakGeneAnnotation$genewindow[DEtfs])))
DEcsmSize <- sum(width(reduce(peakGeneAnnotation$genewindow[DEcsm])))
tf.csmBinom <- mapply(
binom.test,
c(
length(unique(unlist(peakGeneAnnotation$geneToPeak[tfs]))),
length(unique(unlist(peakGeneAnnotation$geneToPeak[csm]))),
length(unique(unlist(peakGeneAnnotation$geneToPeak[DEgenes])))
),
length(peakGeneAnnotation$peakToGene),
c(tfSize,csmSize,DEwindowSize)/windowSize,
alternative='two.sided',conf.level=.99,SIMPLIFY = F
)
genelenBinom <- mapply(
binom.test,
sapply(peakGeneAnnotation$geneToPeak,length),
length(peakGeneAnnotation$peakToGene),
width(peakGeneAnnotation$genewindow[names(peakGeneAnnotation$geneToPeak)])/windowSize,
alternative='two.sided',conf.level=.99,SIMPLIFY = F
)
gene.size.npeak <- data.frame(
bp = width(genebody[names(peakGeneAnnotation$geneToPeak)]),
npeak = sapply(peakGeneAnnotation$geneToPeak,length),
type='any',
row.names = names(peakGeneAnnotation$geneToPeak)
)
peakGeneAnnotation$genewindow
width(peakGeneAnnotation$genewindow[names(peakGeneAnnotation$geneToPeak)])
gene.size.npeak <- data.frame(
bp = width(peakGeneAnnotation$genes[names(peakGeneAnnotation$geneToPeak)]),
npeak = sapply(peakGeneAnnotation$geneToPeak,length),
type='any',
row.names = names(peakGeneAnnotation$geneToPeak)
)
gene.size.npeak$log2bp <- log2(gene.size.npeak$bp)
gene.size.npeak[tfs,'type'] <- "TF"
gene.size.npeak <- data.frame(
bp = width(peakGeneAnnotation$genes[names(peakGeneAnnotation$geneToPeak)]),
npeak = sapply(peakGeneAnnotation$geneToPeak,length),
type='any',
row.names = names(peakGeneAnnotation$geneToPeak),
stringsAsFactors = F
)
gene.size.npeak$log2bp <- log2(gene.size.npeak$bp)
gene.size.npeak[tfs,'type'] <- "TF"
gene.size.npeak[csm,'type'] <- "CSM"
gene.size.npeak$peakPerKb <- gene.size.npeak$npeak/gene.size.npeak$bp*1000
densityplot(~peakPerKb,gene.size.npeak,groups=type,auto.key = T,xlim = c(-5,20),pch=NA)
library(lattice)
densityplot(~peakPerKb,gene.size.npeak,groups=type,auto.key = T,xlim = c(-5,20),pch=NA)
densityplot(~npeak,gene.size.npeak,groups=type,auto.key = T)
densityplot(~peakPerKb,gene.size.npeak,groups=type,auto.key = T,xlim = c(-5,20),pch=NA)
densityplot(~log2bp,gene.size.npeak,groups=type,auto.key = T)
peak.size <- data.frame(
peaklen=width(peakGeneAnnotation$peaks),
type='all',row.names = names(peakGeneAnnotation$peaks,stringsAsFactors=F)
)
peak.size <- data.frame(
peaklen=width(peakGeneAnnotation$peaks),
type='all',row.names = names(peakGeneAnnotation$peaks),stringsAsFactors=F
)
peak.size[unique(unlist(peakGeneAnnotation$geneToPeak[tfs])),'type'] <- "TF"
peak.size[unique(unlist(peakGeneAnnotation$geneToPeak[csm])),'type'] <- "CSM"
densityplot(~peaklen,peak.size,groups=type,auto.key = T)
plot(gene.size.npeak[,c('log2bp','npeak')],pch=19,col='lightgray',cex=.8)
points(gene.size.npeak[tfs,c('log2bp','npeak')],pch=19,col='red',cex=.8)
points(gene.size.npeak[csm,c('log2bp','npeak')],pch=19,col='blue',cex=.8)
points(gene.size.npeak[intersect(tfs,expressed),c('log2bp','npeak')],pch=1,col='red',cex=1.5)
expressed <- Reduce(union,append(sapply(scrna,row.names),bulkGS))
points(gene.size.npeak[intersect(tfs,expressed),c('log2bp','npeak')],pch=1,col='red',cex=1.5)
points(gene.size.npeak[intersect(csm,expressed),c('log2bp','npeak')],pch=1,col='blue',cex=1.5)
plot(gene.size.npeak[,c('log2bp','npeak')],pch=19,col='lightgray',cex=.8)
points(gene.size.npeak[intersect(tfs,expressed),c('log2bp','npeak')],pch=19,col='red',cex=.8)
points(gene.size.npeak[intersect(csm,expressed),c('log2bp','npeak')],pch=19,col='blue',cex=.8)
plot(gene.size.npeak[,c('log2bp','npeak')],pch=19,col='lightgray',cex=.8,xlim=c(14.5,17))
points(gene.size.npeak[tfs,c('log2bp','npeak')],pch=19,col='red',cex=.8)
points(gene.size.npeak[csm,c('log2bp','npeak')],pch=19,col='blue',cex=.8)
points(gene.size.npeak[csm,c('log10bp','npeak')],pch=19,col='blue',cex=.8)
points(gene.size.npeak[tfs,c('log2bp','npeak')],pch=19,col='red',cex=.8)
plot(gene.size.npeak[,c('log2bp','npeak')],pch=19,col='lightgray',cex=.8)
points(gene.size.npeak[tfs,c('log2bp','npeak')],pch=19,col='red',cex=.8)
points(gene.size.npeak[csm,c('log2bp','npeak')],pch=19,col='blue',cex=.8)
2^14.5
log10(2^14.5)
windowSize <- sum(width(reduce(peakGeneAnnotation$genewindow)))
tfSize <- sum(width(reduce(peakGeneAnnotation$genewindow[tfs])))
csmSize <- sum(width(reduce(peakGeneAnnotation$genewindow[csm])))
DEtfs <- intersect(tfs,DEgenes)
DEcsm <- intersect(csm,DEgenes)
DEwindowSize <- sum(width(reduce(peakGeneAnnotation$genewindow[DEgenes])))
DEtfSize <- sum(width(reduce(peakGeneAnnotation$genewindow[DEtfs])))
DEcsmSize <- sum(width(reduce(peakGeneAnnotation$genewindow[DEcsm])))
expressed
DEgenes
setdiff(expressed,DEgenes)
setdiff(DEgenes,expressed)
plot(gene.size.npeak[,c('log2bp','npeak')],pch=19,col='lightgray',cex=.8)
points(gene.size.npeak[DEtfs,c('log2bp','npeak')],pch=19,col='red',cex=.8)
points(gene.size.npeak[DEtfs,c('log2bp','npeak')],pch=19,col='blue',cex=.8)
points(gene.size.npeak[DEtfs,c('log2bp','npeak')],pch=19,col='red',cex=.8)
points(gene.size.npeak[DEcsm,c('log2bp','npeak')],pch=19,col='blue',cex=.8)
gene.size.npeak <- data.frame(
bp = width(peakGeneAnnotation$genewindow[names(peakGeneAnnotation$geneToPeak)]),
npeak = sapply(peakGeneAnnotation$geneToPeak,length),
type='any',
row.names = names(peakGeneAnnotation$geneToPeak),
stringsAsFactors = F
)
gene.size.npeak$log2bp <- log2(gene.size.npeak$bp)
gene.size.npeak[tfs,'type'] <- "TF"
gene.size.npeak[csm,'type'] <- "CSM"
gene.size.npeak$peakPerKb <- gene.size.npeak$npeak/gene.size.npeak$bp*1000
densityplot(~peakPerKb,gene.size.npeak,groups=type,auto.key = T,xlim = c(-5,20),pch=NA)
densityplot(~peakPerKb,gene.size.npeak,groups=type,auto.key = T,pch=NA)
hist(sapply(peakGeneAnnotation$geneToPeak,length),1000,xlim=c(0,1000),border = 'gray',col='gray')
hist(sapply(peakGeneAnnotation$geneToPeak,length),1000,border = 'gray',col='gray')
hist(sapply(peakGeneAnnotation$geneToPeak,length),100,border = 'gray',col='gray')
hist(sapply(peakGeneAnnotation$peakToGene,length),100,border = 'gray',col='gray')
hist(sapply(peakGeneAnnotation$peakToGene,length),10,border = 'gray',col='gray')
hist(sapply(peakGeneAnnotation$peakToGene,length),20,border = 'gray',col='gray')
hist(sapply(peakGeneAnnotation$peakToGene,length),10,border = 'gray',col='gray')
hist(sapply(peakGeneAnnotation$peakToGene,length),15,border = 'gray',col='gray')
hist(sapply(peakGeneAnnotation$peakToGene,length),15,border = 'gray',col='gray')
hist(sapply(peakGeneAnnotation$peakToGene,length),border = 'gray',col='gray')
library(BSgenome)
available.genomes()
q()
library(motifmatchr)
library(TFBSTools)
library(DBI)
library(BSgenome.Cintestinalis.KH.KH2013)
source('data/plotMotifs.R')
source('data/sqlfns.R')
source('data/chromVarFns.R')
source('data/motifHyperFns.R')
source('data/dirfns.R')
source('data/corHeatmap.R')
con <- dbConnect(RSQLite::SQLite('../code/DE_DA/data/atacCiona.db'))
con <- dbConnect(RSQLite::SQLite(),'../code/DE_DA/data/atacCiona.db')
scrna <- getScRNA(con)
peaksets <- getPeaksets(con)
ann <- getAnnotation(con)
cisbp.motifs <- getCisbpMotifs()
names(cisbp.motifs) <- make.names(sapply(tags(cisbp.motifs),'[[',"DBID.1"),T)
cisbp.matches <- matchMotifs(cisbp.motifs,ann$peaks,BSgenome.Cintestinalis.KH.KH2013,'subject','matches')
cisbp.family <- sapply(tags(cisbp.motifs),'[[',"Family_Name")
cisbp.family=='promoter'
sum(cisbp.family=='promoter')
GRangesList(
seqnames="KhL24",start=c(31630,33162),end=c(32784,33770)
)
mapply(
GRanges,seqnames="KhL24",start=c(31630,33162),end=c(32784,33770)
)
?GRanges
GRanges("chr1:2501-2800")
GRangesList(
"KhL24:31630-32784","KhL24:33162-33770"
)
sapply(
c("KhL24:31630-32784","KhL24:33162-33770"),GRanges
)
do.call(GRangesList,sapply(
c("KhL24:31630-32784","KhL24:33162-33770"),GRanges
))
GRanges(
"KhL24:31630-32784","KhL24:33162-33770"
)
GRanges(
c("KhL24:31630-32784","KhL24:33162-33770")
)
cisbp.matches <- matchMotifs(
cisbp.motifs[cisbp.family=="promoter"],
GRanges(c("KhL24:31630-32784","KhL24:33162-33770")),
BSgenome.Cintestinalis.KH.KH2013,'subject','positions'
)
cisbp.matches
sapply(cisbp.matches,length)
cisbp.matches <- matchMotifs(
cisbp.motifs[cisbp.family=="promoter"],
GRanges(c("KhL24:31630-32784","KhL24:33162-33770")),
BSgenome.Cintestinalis.KH.KH2013,'subject','counts'
)
cisbp.matches <- matchMotifs(
cisbp.motifs[cisbp.family=="promoter"],
GRanges(c("KhL24:31630-32784","KhL24:33162-33770")),
BSgenome.Cintestinalis.KH.KH2013,'subject','scores'
)
cisbp.matches
motifMatches(cisbp.matches)
motifScores(cisbp.matches)
?matchMotifs
cisbp.matches <- matchMotifs(
cisbp.motifs[cisbp.family=="promoter"],
GRanges(c("KhL24:31630-32784","KhL24:33162-33770")),
BSgenome.Cintestinalis.KH.KH2013,'subject','positions'
)
motifMatches(cisbp.matches)
motifScores(cisbp.matches)
cisbp.matches
sapply(cisbp.matches,countOverlaps,GRanges(c("KhL24:31630-32784","KhL24:33162-33770")))
?countMatches
?countOverlaps
countOverlaps(cisbp.matches,GRanges(c("KhL24:31630-32784","KhL24:33162-33770")))
countOverlaps(GRanges(c("KhL24:31630-32784","KhL24:33162-33770")),cisbp.matches)
sapply(cisbp.matches,countOverlaps,query=GRanges(c("KhL24:31630-32784","KhL24:33162-33770")))
Matrix(cisbp.motifs['Inr_human1'])
nmotifs <- sapply(cisbp.matches,countOverlaps,query=GRanges(c("KhL24:31630-32784","KhL24:33162-33770")))
nmotifs
t(nmotifs)
setNames(t(nmotifs),c("KhL24:31630-32784","KhL24:33162-33770"))
nmotifs <- sapply(cisbp.matches,countOverlaps,query=GRanges(c("KhL24:31630-32784","KhL24:33162-33770")))
row.names(nmotifs) <- c("KhL24:31630-32784","KhL24:33162-33770")
dir.tab(t(nmotifs))
dir.tab('ebf_promoter_motifs',t(nmotifs))
dir.tab(t(nmotifs),'ebf_promoter_motifs')
q()
